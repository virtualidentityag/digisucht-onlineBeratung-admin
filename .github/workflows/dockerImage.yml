name: Publish Docker image

on:
    push:
        branches:
            - 'develop'
            - 'tsys-release'
        tags:
            - 'dockerImage.v.*'
            - 'v*'

jobs:
    build:
        name: Build
        if: "!contains(github.event.head_commit.author, 'action@github.com')"
        runs-on: ubuntu-latest
        steps:
            - name: set env
              run: echo BRANCH=$(echo -n "${GITHUB_REF#refs/heads/}") >> $GITHUB_ENV
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v2
              with:
                  node-version: 14.18.3
            - run: npm i
              env:
                  GITHUB_TOKEN: ${{ secrets.github_token }}
            - name: build
              run: npm run build
              env:
                  GITHUB_TOKEN: ${{ secrets.github_token }}
            - uses: actions/upload-artifact@v2
              with:
                  name: buildfiles
                  path: build/**/*
    push_to_registry:
        strategy:
            matrix:
                registry: ['docker.pkg.github.com', 'ghcr.io']
        needs: [build]
        name: Push Docker image to GitHub Packages
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Download buildfiles artifact
              uses: actions/download-artifact@v2
              with:
                  name: buildfiles
            - name: Get current time
              id: time
              uses: nanzm/get-time-action@v1.1
              with:
                  timeZone: 2
                  format: 'YYYYMMDD[_]HHmmss'
            - name: Prepare environment variables
              run: |
                  echo "DOCKER_REGISTRY=$(echo "${{ matrix.registry }}/${{ github.repository }}" | awk '{print tolower($0)}')" >> $GITHUB_ENV
                  echo "DOCKER_IMAGE=$(echo "${{ github.repository }}" | awk -F / '{print tolower($2)}')" >> $GITHUB_ENV
                  echo "REPO_NAME_WITHOUT_PREFIX"=$(echo "${{ github.repository }}" | sed "s/.*\///" | awk -F / '{print tolower($0)}') >> $GITHUB_ENV
                  echo CLEAN_REF=$(echo "${GITHUB_REF_NAME#refs/heads/}") >> $GITHUB_ENV
                  echo TYPE=$(echo -n "${GITHUB_REF_TYPE}") >> $GITHUB_ENV
                  echo TIME_STAMP=$(echo -n "${{ steps.time.outputs.time }}") >> $GITHUB_ENV
              shell: bash
            - name: Set branch_timestamp for image from branch
              if: ${{ env.TYPE == 'branch' }}
              run: echo DOCKER_IMAGE_TAG=$(echo "${{ env.CLEAN_REF }}_${{ env.TIME_STAMP }}") >> $GITHUB_ENV
              shell: bash
            - name: Set tag for image from tag
              if: ${{ env.TYPE == 'tag' }}
              run: echo DOCKER_IMAGE_TAG=$(echo "${{ env.CLEAN_REF }}") >> $GITHUB_ENV
              shell: bash
            - name: Push to GitHub Packages
              uses: docker/build-push-action@v1.1.1
              with:
                  username: ${{ secrets.GH_PACKAGE_RELEASE_USER }}
                  password: ${{ secrets.GH_PACKAGE_RELEASE_TOKEN }}
                  registry: ${{ env.DOCKER_REGISTRY }}
                  repository: ${{ env.DOCKER_IMAGE }}
                  tags: ${{ env.DOCKER_IMAGE_TAG}}
            - name: Hint about the Docker Image Tag if successfull
              if: ${{ success() }}
              run: |
                  echo "### Publish Docker image :white_check_mark:" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "- Image name: ${{ env.DOCKER_IMAGE }}" >> $GITHUB_STEP_SUMMARY
                  echo "- Version: ${{ env.DOCKER_IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY
            - name: Hint about the Docker Image Tag if not successfull
              if: ${{ failure() || cancelled() }}
              run: |
                  echo "### Publish Docker image :x:" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "- It seems that something has gone wrong" >> $GITHUB_STEP_SUMMARY

            - name: Run Trivy vulnerability image scanner
              if: ${{ (matrix.registry == 'ghcr.io') }}
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: '${{ env.DOCKER_REGISTRY }}/${{ env.REPO_NAME_WITHOUT_PREFIX }}:${{ env.DOCKER_IMAGE_TAG }}'
                  format: 'table'
                  exit-code: '1'
                  vuln-type: 'os,library'
                  severity: 'CRITICAL'
            - name: Publish to T-sys if T-sys release
              if: ${{ (github.ref == 'refs/heads/tsys-release') && (matrix.registry == 'ghcr.io') }}
              uses: fjogeleit/http-request-action@v1
              with:
                  url: 'https://git.mms-support.de/api/v4/projects/${{ secrets.TSYS_SERVICE_ID }}/repository/tags?ref=master&tag_name=${{ env.DOCKER_IMAGE_TAG }}'
                  method: 'POST'
                  customHeaders: '{"PRIVATE-TOKEN": "${{ secrets.TSYS_ACCESS_TOKEN }}"}'
